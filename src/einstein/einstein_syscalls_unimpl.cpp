#include "einstein_common.h"
#include "einstein_utils.h"
#include "einstein_syscalls.h"

static bool unimplemented_arg_is_tainted(syscall_ctx_t *ctx) { return false; }
static string unimplemented_get_details(syscall_ctx_t *ctx) { return "[]"; }
void unimplemented_rewrite_init(string type, size_t ptr_depth, size_t syscall_arg_num, uint8_t * address, size_t size) { }
bool unimplemented_rewrite_check(syscall_ctx_t *ctx, size_t arg_num) { return false; }
#define UNIMPL(n) einstein_syscalls[__NR_ ## n] = {#n, unimplemented_arg_is_tainted, unimplemented_get_details, unimplemented_rewrite_init, unimplemented_rewrite_check}

void einstein_syscalls_init_unimpl(void) {
  for (size_t i = 0; i < SYSCALL_MAX; i++)
    einstein_syscalls[i] = {"UNINIT_SYSCALL", unimplemented_arg_is_tainted, unimplemented_get_details};
  UNIMPL(read);
  UNIMPL(write);
  UNIMPL(open);
  UNIMPL(close);
  UNIMPL(stat);
  UNIMPL(fstat);
  UNIMPL(lstat);
  UNIMPL(poll);
  UNIMPL(lseek);
  UNIMPL(mmap);
  UNIMPL(mprotect);
  UNIMPL(munmap);
  UNIMPL(brk);
  UNIMPL(rt_sigaction);
  UNIMPL(rt_sigprocmask);
  UNIMPL(rt_sigreturn);
  UNIMPL(ioctl);
  UNIMPL(pread64);
  UNIMPL(pwrite64);
  UNIMPL(readv);
  UNIMPL(writev);
  UNIMPL(access);
  UNIMPL(pipe);
  UNIMPL(select);
  UNIMPL(sched_yield);
  UNIMPL(mremap);
  UNIMPL(msync);
  UNIMPL(mincore);
  UNIMPL(madvise);
  UNIMPL(shmget);
  UNIMPL(shmat);
  UNIMPL(shmctl);
  UNIMPL(dup);
  UNIMPL(dup2);
  UNIMPL(pause);
  UNIMPL(nanosleep);
  UNIMPL(getitimer);
  UNIMPL(alarm);
  UNIMPL(setitimer);
  UNIMPL(getpid);
  UNIMPL(sendfile);
  UNIMPL(socket);
  UNIMPL(connect);
  UNIMPL(accept);
  UNIMPL(sendto);
  UNIMPL(recvfrom);
  UNIMPL(sendmsg);
  UNIMPL(recvmsg);
  UNIMPL(shutdown);
  UNIMPL(bind);
  UNIMPL(listen);
  UNIMPL(getsockname);
  UNIMPL(getpeername);
  UNIMPL(socketpair);
  UNIMPL(setsockopt);
  UNIMPL(getsockopt);
  UNIMPL(clone);
  UNIMPL(fork);
  UNIMPL(vfork);
  UNIMPL(execve);
  UNIMPL(exit);
  UNIMPL(wait4);
  UNIMPL(kill);
  UNIMPL(uname);
  UNIMPL(semget);
  UNIMPL(semop);
  UNIMPL(semctl);
  UNIMPL(shmdt);
  UNIMPL(msgget);
  UNIMPL(msgsnd);
  UNIMPL(msgrcv);
  UNIMPL(msgctl);
  UNIMPL(fcntl);
  UNIMPL(flock);
  UNIMPL(fsync);
  UNIMPL(fdatasync);
  UNIMPL(truncate);
  UNIMPL(ftruncate);
  UNIMPL(getdents);
  UNIMPL(getcwd);
  UNIMPL(chdir);
  UNIMPL(fchdir);
  UNIMPL(rename);
  UNIMPL(mkdir);
  UNIMPL(rmdir);
  UNIMPL(creat);
  UNIMPL(link);
  UNIMPL(unlink);
  UNIMPL(symlink);
  UNIMPL(readlink);
  UNIMPL(chmod);
  UNIMPL(fchmod);
  UNIMPL(chown);
  UNIMPL(fchown);
  UNIMPL(lchown);
  UNIMPL(umask);
  UNIMPL(gettimeofday);
  UNIMPL(getrlimit);
  UNIMPL(getrusage);
  UNIMPL(sysinfo);
  UNIMPL(times);
  UNIMPL(ptrace);
  UNIMPL(getuid);
  UNIMPL(syslog);
  UNIMPL(getgid);
  UNIMPL(setuid);
  UNIMPL(setgid);
  UNIMPL(geteuid);
  UNIMPL(getegid);
  UNIMPL(setpgid);
  UNIMPL(getppid);
  UNIMPL(getpgrp);
  UNIMPL(setsid);
  UNIMPL(setreuid);
  UNIMPL(setregid);
  UNIMPL(getgroups);
  UNIMPL(setgroups);
  UNIMPL(setresuid);
  UNIMPL(getresuid);
  UNIMPL(setresgid);
  UNIMPL(getresgid);
  UNIMPL(getpgid);
  UNIMPL(setfsuid);
  UNIMPL(setfsgid);
  UNIMPL(getsid);
  UNIMPL(capget);
  UNIMPL(capset);
  UNIMPL(rt_sigpending);
  UNIMPL(rt_sigtimedwait);
  UNIMPL(rt_sigqueueinfo);
  UNIMPL(rt_sigsuspend);
  UNIMPL(sigaltstack);
  UNIMPL(utime);
  UNIMPL(mknod);
  UNIMPL(uselib);
  UNIMPL(personality);
  UNIMPL(ustat);
  UNIMPL(statfs);
  UNIMPL(fstatfs);
  UNIMPL(sysfs);
  UNIMPL(getpriority);
  UNIMPL(setpriority);
  UNIMPL(sched_setparam);
  UNIMPL(sched_getparam);
  UNIMPL(sched_setscheduler);
  UNIMPL(sched_getscheduler);
  UNIMPL(sched_get_priority_max);
  UNIMPL(sched_get_priority_min);
  UNIMPL(sched_rr_get_interval);
  UNIMPL(mlock);
  UNIMPL(munlock);
  UNIMPL(mlockall);
  UNIMPL(munlockall);
  UNIMPL(vhangup);
  UNIMPL(modify_ldt);
  UNIMPL(pivot_root);
  UNIMPL(_sysctl);
  UNIMPL(prctl);
  UNIMPL(arch_prctl);
  UNIMPL(adjtimex);
  UNIMPL(setrlimit);
  UNIMPL(chroot);
  UNIMPL(sync);
  UNIMPL(acct);
  UNIMPL(settimeofday);
  UNIMPL(mount);
  UNIMPL(umount2);
  UNIMPL(swapon);
  UNIMPL(swapoff);
  UNIMPL(reboot);
  UNIMPL(sethostname);
  UNIMPL(setdomainname);
  UNIMPL(iopl);
  UNIMPL(ioperm);
  UNIMPL(create_module);
  UNIMPL(init_module);
  UNIMPL(delete_module);
  UNIMPL(get_kernel_syms);
  UNIMPL(query_module);
  UNIMPL(quotactl);
  UNIMPL(nfsservctl);
  UNIMPL(getpmsg);
  UNIMPL(putpmsg);
  UNIMPL(afs_syscall);
  UNIMPL(tuxcall);
  UNIMPL(security);
  UNIMPL(gettid);
  UNIMPL(readahead);
  UNIMPL(setxattr);
  UNIMPL(lsetxattr);
  UNIMPL(fsetxattr);
  UNIMPL(getxattr);
  UNIMPL(lgetxattr);
  UNIMPL(fgetxattr);
  UNIMPL(listxattr);
  UNIMPL(llistxattr);
  UNIMPL(flistxattr);
  UNIMPL(removexattr);
  UNIMPL(lremovexattr);
  UNIMPL(fremovexattr);
  UNIMPL(tkill);
  UNIMPL(time);
  UNIMPL(futex);
  UNIMPL(sched_setaffinity);
  UNIMPL(sched_getaffinity);
  UNIMPL(set_thread_area);
  UNIMPL(io_setup);
  UNIMPL(io_destroy);
  UNIMPL(io_getevents);
  UNIMPL(io_submit);
  UNIMPL(io_cancel);
  UNIMPL(get_thread_area);
  UNIMPL(lookup_dcookie);
  UNIMPL(epoll_create);
  UNIMPL(epoll_ctl_old);
  UNIMPL(epoll_wait_old);
  UNIMPL(remap_file_pages);
  UNIMPL(getdents64);
  UNIMPL(set_tid_address);
  UNIMPL(restart_syscall);
  UNIMPL(semtimedop);
  UNIMPL(fadvise64);
  UNIMPL(timer_create);
  UNIMPL(timer_settime);
  UNIMPL(timer_gettime);
  UNIMPL(timer_getoverrun);
  UNIMPL(timer_delete);
  UNIMPL(clock_settime);
  UNIMPL(clock_gettime);
  UNIMPL(clock_getres);
  UNIMPL(clock_nanosleep);
  UNIMPL(exit_group);
  UNIMPL(epoll_wait);
  UNIMPL(epoll_ctl);
  UNIMPL(tgkill);
  UNIMPL(utimes);
  UNIMPL(vserver);
  UNIMPL(mbind);
  UNIMPL(set_mempolicy);
  UNIMPL(get_mempolicy);
  UNIMPL(mq_open);
  UNIMPL(mq_unlink);
  UNIMPL(mq_timedsend);
  UNIMPL(mq_timedreceive);
  UNIMPL(mq_notify);
  UNIMPL(mq_getsetattr);
  UNIMPL(kexec_load);
  UNIMPL(waitid);
  UNIMPL(add_key);
  UNIMPL(request_key);
  UNIMPL(keyctl);
  UNIMPL(ioprio_set);
  UNIMPL(ioprio_get);
  UNIMPL(inotify_init);
  UNIMPL(inotify_add_watch);
  UNIMPL(inotify_rm_watch);
  UNIMPL(migrate_pages);
  UNIMPL(openat);
  UNIMPL(mkdirat);
  UNIMPL(mknodat);
  UNIMPL(fchownat);
  UNIMPL(futimesat);
  UNIMPL(newfstatat);
  UNIMPL(unlinkat);
  UNIMPL(renameat);
  UNIMPL(linkat);
  UNIMPL(symlinkat);
  UNIMPL(readlinkat);
  UNIMPL(fchmodat);
  UNIMPL(faccessat);
  UNIMPL(pselect6);
  UNIMPL(ppoll);
  UNIMPL(unshare);
  UNIMPL(set_robust_list);
  UNIMPL(get_robust_list);
  UNIMPL(splice);
  UNIMPL(tee);
  UNIMPL(sync_file_range);
  UNIMPL(vmsplice);
  UNIMPL(move_pages);
  UNIMPL(utimensat);
  UNIMPL(epoll_pwait);
  UNIMPL(signalfd);
  UNIMPL(timerfd_create);
  UNIMPL(eventfd);
  UNIMPL(fallocate);
  UNIMPL(timerfd_settime);
  UNIMPL(timerfd_gettime);
  UNIMPL(accept4);
  UNIMPL(signalfd4);
  UNIMPL(eventfd2);
  UNIMPL(epoll_create1);
  UNIMPL(dup3);
  UNIMPL(pipe2);
  UNIMPL(inotify_init1);
  UNIMPL(preadv);
  UNIMPL(pwritev);
  UNIMPL(rt_tgsigqueueinfo);
  UNIMPL(perf_event_open);
  UNIMPL(recvmmsg);
  UNIMPL(fanotify_init);
  UNIMPL(fanotify_mark);
  UNIMPL(prlimit64);
  UNIMPL(name_to_handle_at);
  UNIMPL(open_by_handle_at);
  UNIMPL(clock_adjtime);
  UNIMPL(syncfs);
  UNIMPL(sendmmsg);
  UNIMPL(setns);
  UNIMPL(getcpu);
  UNIMPL(process_vm_readv);
  UNIMPL(process_vm_writev);
  UNIMPL(kcmp);
  UNIMPL(finit_module);
  UNIMPL(sched_setattr);
  UNIMPL(sched_getattr);
  // Below syscalls technically not supported by Pin 3.24
  UNIMPL(renameat2);
  UNIMPL(seccomp);
  UNIMPL(getrandom);
  UNIMPL(memfd_create);
  UNIMPL(kexec_file_load);
  UNIMPL(bpf);
  UNIMPL(execveat);
  UNIMPL(userfaultfd);
  UNIMPL(membarrier);
  UNIMPL(mlock2);
  UNIMPL(copy_file_range);
  UNIMPL(preadv2);
  UNIMPL(pwritev2);
  UNIMPL(pkey_mprotect);
  UNIMPL(pkey_alloc);
  UNIMPL(pkey_free);
  UNIMPL(statx);
  UNIMPL(io_pgetevents);
  UNIMPL(rseq);
  // Gap from syscall numbers of rseq (334) to pidfd_send_signal (424)
  UNIMPL(pidfd_send_signal);
  UNIMPL(io_uring_setup);
  UNIMPL(io_uring_enter);
  UNIMPL(io_uring_register);
  UNIMPL(open_tree);
  UNIMPL(move_mount);
  UNIMPL(fsopen);
  UNIMPL(fsconfig);
  UNIMPL(fsmount);
  UNIMPL(fspick);
  UNIMPL(pidfd_open);
  UNIMPL(clone3);
  UNIMPL(close_range);
  UNIMPL(openat2);
  UNIMPL(pidfd_getfd);
  UNIMPL(faccessat2);
  UNIMPL(process_madvise);
  UNIMPL(epoll_pwait2);
  UNIMPL(mount_setattr);
  UNIMPL(quotactl_fd);
  UNIMPL(landlock_create_ruleset);
  UNIMPL(landlock_add_rule);
  UNIMPL(landlock_restrict_self);
  UNIMPL(memfd_secret);
  UNIMPL(process_mrelease);
}